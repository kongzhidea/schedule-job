<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 反斜线（/）字符表示增量值。例如，在秒字段中“5/15”代表从第 5 秒开始，每 15 秒一次。 -->
    <!--“？”字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值 当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？”
        问号（?）字符和字母 L 字符只有在月内日期和周内日期字段中可用。问号表示这个字段不包含具体值。所以，如果指定月内日期，可以在周内日期字段中插入“?”，表示周内日期值无关紧要。
        字母 L 字符是 last 的缩写。放在月内日期字段中，表示安排在当月最后一天执行。在周内日期字段中，如果“L”单独存在，就等于“7”，否则代表当月内周内日期的最后一个实例。所以“0L”表示安排在当月的最后一个星期日执行。 -->
    <!-- 在月内日期字段中的字母（W）字符把执行安排在最靠近指定值的工作日。把“1W”放在月内日期字段中，表示把执行安排在当月的第一个工作日内。 -->
    <!--井号（#）字符为给定月份指定具体的工作日实例。把“MON#2”放在周内日期字段中，表示把任务安排在当月的第二个星期一。 -->
    <!-- 星号（*）字符是通配字符，表示该字段可以接受任何可能的值。 -->
    <!-- 减号(-) 表示一个范围 -->
    <!-- 逗号(,) 表示一个列表 -->

    <!-- 秒 0-59 , - * / -->
    <!-- 分 0-59 , - * / -->
    <!-- 小时 0-23 , - * / -->
    <!-- 日期 1-31 , - * ? / L W C -->
    <!--月份 1-12 或者 JAN-DEC , - * / -->
    <!--星期 1-7 或者 SUN-SAT , - * ? / L C # -->
    <!--年（可选） 留空, 1970-2099 , - * / -->

    <!-- 表达式意义 示例: -->
    <!-- "0 0 12 * * ?" 每天中午12点触发 -->
    <!-- "0 15 10 ? * *" 每天上午10:15触发 -->
    <!-- "0 15 10 * * ?" 每天上午10:15触发 -->
    <!-- "0 15 10 * * ? *" 每天上午10:15触发 -->
    <!-- "0 15 10 * * ? 2005" 2005年的每天上午10:15触发 -->
    <!-- "0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发 -->
    <!--"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发 -->
    <!--"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 -->
    <!--"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发 -->
    <!--"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发 -->
    <!--"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发 -->
    <!--"0 15 10 15 * ?" 每月15日上午10:15触发 -->
    <!-- "0 15 10 L * ?" 每月最后一日的上午10:15触发 -->
    <!--"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发 -->
    <!--"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发 -->
    <!--"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发 -->

    <!-- 定时任务。要调用的工作类 -->
    <bean id="quartzJob" class="com.schedule.quartz.ram.MyQuartzJob"></bean>

    <!-- 定义调用对象和调用对象的方法 -->
    <bean id="jobtask"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob"/>
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="work"/>
        <!-- 是否允许任务并发执行,默认true。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 定义触发时间 -->
    <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="jobtask"/>
        </property>
        <!-- cron表达式 -->
        <property name="cronExpression">
            <value>0/3 * * * * ?</value>
        </property>
    </bean>


    <!-- 定义调用对象和调用对象的方法 -->
    <bean id="jobtask2" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.schedule.quartz.ram.QuartzJob2"/>
    </bean>
    <!-- 定义触发时间 -->
    <bean id="doTime2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="jobtask2"/>
        </property>
        <!-- cron表达式 -->
        <property name="cronExpression">
            <value>0/3 * * * * ?</value>
        </property>
    </bean>

    <!-- 定义调用对象和调用对象的方法 -->
    <bean id="jobtask3" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.schedule.quartz.ram.QuartzJob3"/>
    </bean>
    <!-- 定义触发时间 -->
    <bean id="doTime3" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="jobtask3"/>
        </property>
        <!-- cron表达式 -->
        <property name="cronExpression">
            <value>0/3 * * * * ?</value>
        </property>
    </bean>

    <bean id="startQuertz" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="doTime"/>
                <ref bean="doTime2"/>
                <ref bean="doTime3"/>
            </list>
        </property>
    </bean>

</beans>
